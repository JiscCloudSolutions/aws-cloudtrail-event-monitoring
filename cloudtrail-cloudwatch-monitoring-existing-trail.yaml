AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  LogGroupRetentionDays:
    Type: Number
    Default: 90

  CloudWatchMetricNamespace:
    Type: String
    Default: "monitoring"
    Description: "The CloudWatch namespace you want to use for monitoring metrics"

Resources:
  MonitoringSNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub "${AWS::StackName}-monitoring-topic"
      TopicName: !Sub "${AWS::StackName}-monitoring-topic"

  MonitoringSNSTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: AllowCloudTrail
            Effect: "Allow"
            Principal:
              Service: "cloudtrail.amazonaws.com"
            Resource: !Ref MonitoringSNSTopic
            Action: "sns:Publish"
      Topics:
        - !Ref MonitoringSNSTopic
      
  MonitoringCloudWatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "${AWS::StackName}-cloudtrail-logs"
      RetentionInDays: !Ref LogGroupRetentionDays

  MonitoringCloudWatchLogRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "cloudtrail.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      RoleName: !Sub "${AWS::StackName}-cloudtrail-to-cloudwatch-role"

  MonitoringCloudWatchLogPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: "Allow cloudtrail to write to cloudwatch log group"
      ManagedPolicyName: !Sub "${AWS::StackName}-cloudtrail-to-cloudwatch-policy"
      Roles: 
        - !Ref MonitoringCloudWatchLogRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: ""
            Effect: "Allow"
            Action:
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
            Resource: !GetAtt MonitoringCloudWatchLogGroup.Arn

  CreateStackMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: '{ ($.eventName = "CreateStack") && ($.userIdentity.sessionContext.sessionIssuer.userName = "stacksets-exec-*") }'
      LogGroupName: !Ref MonitoringCloudWatchLogGroup
      MetricTransformations:
        - MetricName: "stackset-executions"
          MetricNamespace: !Ref CloudWatchMetricNamespace
          MetricValue: "1" 
          DefaultValue: 0

  CreateStackAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: "Alert when monitoring:stackset-executions metric is greater than 0 in last 5 minutes"
      AlarmName: !Sub "${AWS::StackName}-org-stacksets-execution-alarm"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Period: 60
      Namespace: !Ref CloudWatchMetricNamespace
      MetricName: "stackset-executions"
      TreatMissingData: notBreaching
      Statistic: "Average"
      Threshold: 1
      AlarmActions:
        - !Ref MonitoringSNSTopic

